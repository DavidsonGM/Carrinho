// Enviar letras para o PC

// USCI_A1 a 9.600 bits por s e 8 bits de dados
// P4.4 = TXD
// P4.5 = RXD

#include <msp430.h> 

#define CR  0xD // ASCII para Carriage return: Voltar para o inicio da linha
#define LF  0xA // ASCII para Line Feed: Quebra de linha

void uart1_config(void);
void ser_str(char *p);
void ser_char(char c);

int main(void){
    char letra='A';

    WDTCTL = WDTPW | WDTHOLD;   // stop watchdog timer
    uart1_config();
    ser_str("teste da serial\n");

    while(1){
        ser_char(letra++);
        if (letra == 'Z' + 1)
            letra = LF;
        else if (letra == LF + 1)
            letra = CR;
        else if (letra == CR + 1)
            letra = 'A';
        __delay_cycles(1048576/4); // Atraso de 1 s para imprimir no terminal (MCLK = 1.048.576)
    }

    return 0;
}

void ser_str(char *p){
    int i = 0;
    while (p[i] != 0){
        ser_char(p[i]);
        i++;
    }
}

void ser_char(char c){
    UCA1TXBUF = c;
    while((UCA1IFG&UCTXIFG)==0); // Esperar transmitir
}

// SMCLK para gerar 9.600 (BRW = 6, BRF = 13, BRS = 0, UCOS16 = 1)
void uart1_config(void){
    UCA1CTL1 = UCSSEL_2 | // SMCLK
               UCSWRST;   // Reset
    UCA1CTL0 = 0;
    UCA1BRW = 6;
    UCA1MCTL = UCBRF_13 |
               UCBRS_0  |
               UCOS16;
    P4SEL |= BIT3 | BIT0;
    PMAPKEYID = 0x02D52;
    P4MAP0 = PM_UCA1TXD;
    P4MAP3 = PM_UCA1RXD;

    UCA1CTL1 &= ~UCSWRST; // Desativando reset
}
